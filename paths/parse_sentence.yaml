---
post:
  tags:
  - other
  summary: Parse sentence into an expense
  description: |
    Attempts to create an expense from the input as an English natural language phrase like "groceries $20" or "Jon paid me $50".
    If `valid` is `true`, the `expense` value will be a complete and valid expense.
    If it is `false`, the `expense` value may be missing some values.
    
    **Note**: By default, the expense is only parsed, not persisted. See the `autosave` parameter.
  requestBody:
    required: true
    content:
      application/json:
        schema:
          oneOf:
          - type: object
            title: Freeform
            properties:
              input:
                type: string
                example: "I owe Ada 5 bucks"
                description: A natural language sentence describing an expense.
              autosave:
                type: boolean
                description: If true, the resulting expense will be saved if valid.
                default: true
          - type: object
            title: With friend 
            properties:
              input:
                type: string
                example: "I owe Ada 5 bucks"
                description: A natural language sentence describing an expense.
              friend_id:
                type: integer
              autosave:
                type: boolean
                description: If true, the resulting expense will be saved if valid.
                default: true
          - type: object
            title: With group
            properties:
              input:
                type: string
                example: "I owe Ada 5 bucks"
                description: A natural language sentence describing an expense.
              group_id:
                type: integer
              autosave:
                type: boolean
                description: If true, the resulting expense will be saved if valid.
                default: true
          required:
          - input
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              expense:
                $ref: ../schemas/expense.yaml
              valid:
                type: boolean
              confidence:
                type: number
                format: double
                example: 0.5
              error:
                type: string
